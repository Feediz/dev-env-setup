#!/bin/sh

# =================================================================
# Setup color constants
# =================================================================
# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White


# =================================================================
# Functions
# =================================================================
function customPrint() {
    msg=$1
    type="info"
    if [ $2 != "" ]
    then
        type=$2
    fi
    #type=[[ $2 -ne "" ]] && echo $2 || echo "info"
    
    if [ "$type" = "info" ]
    then
        printf "$Green $msg $Black\n";
    fi
}


function customPrintCMD() {
    cmd=$1
    customPrint "Running the following command: [$cmd]" "info"
}


function runCMD() {
    cmd=$1
    customPrintCMD "$cmd"
    $cmd
}

# get the new folder/url name
project_name=$1

# path of www
www_path=/Users/fidelh/www
www_path=~/www

# path to vhost file
vhost_file_path=/usr/local/etc/httpd/extra/httpd-vhosts.conf

if [ "$project_name" = "" ]
then
    echo "A Project name is required, please call this function as [ ~/setup-dev-env project_name.test ]"
    exit 1
fi

# set up directory
runCMD "cp -a $www_path/template_env/. $www_path/$project_name"

# cd into the project
runCMD "cd $www_path/$project_name/ssl_certs"

# make the cert
runCMD "mkcert $project_name"

# append to vhost file
cp $vhost_file_path ${vhost_file_path}.original
echo "" >> $vhost_file_path
echo "# =================================================================================================" >> $vhost_file_path
echo "#                                   $project_name" >> $vhost_file_path
echo "# =================================================================================================" >> $vhost_file_path
echo "<VirtualHost *:80>" >> $vhost_file_path
echo "\t    ServerAdmin fidel@test.com" >> $vhost_file_path
echo "\t    ServerName $project_name" >> $vhost_file_path
echo "\t    DocumentRoot /Users/fidelh/www/$project_name" >> $vhost_file_path
echo "\t    ErrorLog /Users/fidelh/www/$project_name/Logs/error.log" >> $vhost_file_path
echo "\t    # CustomLog /Users/fidelh/www/$project_name/access.log" >> $vhost_file_path
echo "" >> $vhost_file_path
echo "\t    <Directory /Users/fidelh/www/$project_name>" >> $vhost_file_path
echo "\t\t        Require all granted" >> $vhost_file_path
echo "\t\t        AllowOverride All" >> $vhost_file_path
echo "\t    </Directory>" >> $vhost_file_path
echo "</VirtualHost>" >> $vhost_file_path
echo "" >> $vhost_file_path
echo "<IfModule mod_ssl.c>" >> $vhost_file_path
echo "\t    <VirtualHost *:443>" >> $vhost_file_path
echo "\t\t        ServerAdmin fidel@test.com" >> $vhost_file_path
echo "\t\t        ServerName $project_name" >> $vhost_file_path
echo "\t\t        DocumentRoot /Users/fidelh/www/$project_name" >> $vhost_file_path
echo "\t\t        ErrorLog /Users/fidelh/www/$project_name/Logs/error.log" >> $vhost_file_path
echo "\t\t        # CustomLog /Users/fidelh/www/$project_name/access.log" >> $vhost_file_path
echo "\t\t        SSLEngine On" >> $vhost_file_path
echo "\t\t        SSLCertificateFile /Users/fidelh/www/$project_name/ssl_certs/$project_name.pem" >> $vhost_file_path
echo "\t\t        SSLCertificateKeyFile /Users/fidelh/www/$project_name/ssl_certs/$project_name-key.pem" >> $vhost_file_path
echo "\t\t        <Directory /Users/fidelh/www/$project_name>" >> $vhost_file_path
echo "\t\t\t            AllowOverride All" >> $vhost_file_path
echo "\t\t\t            Options Indexes FollowSymLinks" >> $vhost_file_path
echo "\t\t\t            Require all granted" >> $vhost_file_path
echo "\t\t        </Directory>" >> $vhost_file_path
echo "\t    </VirtualHost>" >> $vhost_file_path
echo "</IfModule>" >> $vhost_file_path
echo "" >> $vhost_file_path
echo "" >> $vhost_file_path
echo "" >> $vhost_file_path


# append to host file
cp /etc/hosts /etc/hosts.original
echo "127.0.0.1	$project_name" >> /etc/hosts

# restart all services
brew services restart --all



